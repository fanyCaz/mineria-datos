# -*- coding: utf-8 -*-
"""Copia de practica5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lqN2tlwHJgn6UUNtK9gmB6K5YPh4eBIh
"""

import pandas as pd
import numpy as np
from google.colab import drive
drive.mount('/content/drive')

import math

data_df = pd.read_csv('/content/drive/MyDrive/MINERIA_DATOS/LABORATORIO/Practica5/Data_6columns.csv')

csv_0 = pd.read_csv('/content/drive/MyDrive/FIME/NOVENO/MINERIA_DATOS/LABORATORIO/Practica5/combinaciones/combinacion_0.csv')

total_instances = len(csv_0)
total_instances

i_q1= csv_0['Income'].quantile(0.25)
i_q2 = csv_0['Income'].quantile(0.5)
i_q3 = csv_0['Income'].quantile(0.75)
i_q4 = csv_0['Income'].max()
i_quantiles = [i_q1,i_q2,i_q3,i_q4]
# se usarÃ¡n los rangos de los cuantiles, para solo tener 4 rangos
a_q1 = csv_0['Age'].quantile(0.25)
a_q2 = csv_0['Age'].quantile(0.5)
a_q3 = csv_0['Age'].quantile(0.75)
a_q4 = csv_0['Age'].max()
a_quantiles = [a_q1,a_q2,a_q3,a_q4]
house_own_types = csv_0['House_Ownership'].unique()
profession_types = csv_0['Profession'].unique()

entropies_incomes = []
entropies_age = []
entropies_house = []
entropies_profession = []

branch_incomes = []
branch_ages = []
branch_hown = []
branch_prof = []

"""Primer rango, Income -> Age -> House Own -> Profession

"""

min = 0
for idx,i_q in enumerate(i_quantiles):
  if idx > 0:
    min = i_quantiles[idx-1]
  branch = csv_0.query(f'Income > {min} & Income <= {i_q}')
  branch_incomes.append(branch)
  probability = len(branch) / total_instances
  entropies_incomes.append( -probability*math.log10(probability) )

entropies_incomes

branch_incomes[0].query('Age > 0 & Age < 10')

for branch in branch_incomes:
  min = 0
  for idx,a_q in enumerate(a_quantiles):
    if idx > 0:
      min = a_quantiles[idx - 1]
    branch.query(f'Age > {min} & Age <= {a_q}')
    a_branch = branch.query(f'Age > {min} & Age <= {a_q}')
    branch_ages.append(a_branch)
    probability = len(a_branch) / len(branch)
    entropies_age.append( -probability*math.log10(probability) )

print( len(entropies_age) )

i_branch = csv_0.query(f'Income > 0 & Income < {i_q1}')

pbranch_1 = len(i_branch) / total_instances
t = -pbranch_1*math.log10(pbranch_1)
entropies_incomes.append(t)

a_branch = i_branch.query(f'Age > 0 & Age < {a_q1}')

prange_a = len(a_branch) / len(i_branch)
t = -prange_a*math.log10(prange_a)
entropies_age.append(t)



h_branch = a_branch.query(f'House_Ownership == "rented"')

keys = keys[1:]

keys

temp = [keys[0],keys[2],keys[1],keys[3],keys[4],keys[5],keys[6]]

data_df.sort_values(by=['Income'])

data_df.query('Income > 6000 & Age == 59')

data_df